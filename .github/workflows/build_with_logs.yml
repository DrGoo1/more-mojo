name: Build App & Plugins (macOS) with Logs

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  app:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode (list and optionally select)
        run: |
          echo "Available Xcodes:"; ls /Applications | grep Xcode || true
          # If you need a specific version, uncomment:
          # sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Build App (xcodebuild) with full logs
        run: |
          set -euo pipefail
          mkdir -p ci_logs app/build
          # Build & tee raw log
          xcodebuild \
            -project app/RealFeelStudio.xcodeproj \
            -scheme "RealFeel Studio" \
            -configuration Release \
            -sdk macosx \
            -derivedDataPath app/build \
            -resultBundlePath app/build/App.xcresult \
            build 2>&1 | tee ci_logs/xcodebuild_app_stdout.log
          # Basic context
          {
            echo "=== Tooling ==="
            xcodebuild -version
            sw_vers
            swift --version
          } | tee ci_logs/app_tooling.txt

      - name: Upload App logs & result bundle (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-build-logs
          path: |
            ci_logs/**
            app/build/Build/Logs/**           # classic Xcode logs
            app/build/App.xcresult/**         # result bundle
          if-no-files-found: warn
          retention-days: 7

      - name: Upload App artifact (if built)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: RealFeelStudio.app
          path: app/build/Build/Products/Release/RealFeel\ Studio.app
          if-no-files-found: error
          retention-days: 7

      # Surface the first errors inline on the run page
      - name: Show last lines of app log (on failure)
        if: failure()
        run: |
          echo "----- Tail of app build log -----"
          tail -n 200 ci_logs/xcodebuild_app_stdout.log || true

  plugin:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Fetch JUCE (or use your cached path)
        run: |
          git clone --depth=1 https://github.com/juce-framework/JUCE.git || true
          echo "JUCE_DIR=$PWD/JUCE" >> $GITHUB_ENV

      - name: Build Plugin (CMake) with full logs
        env:
          JUCE_DIR: ${{ env.JUCE_DIR }}
        run: |
          set -euo pipefail
          mkdir -p ci_logs
          rm -rf plugin/build
          {
            echo "=== Tooling ==="
            cmake --version
            ls /Applications | grep Xcode || true
          } | tee ci_logs/plugin_tooling.txt

          echo "==> CMake configure"
          cmake -B plugin/build -S plugin -DJUCE_DIR="$JUCE_DIR" 2>&1 | tee ci_logs/cmake_configure.log

          echo "==> CMake build (Release)"
          cmake --build plugin/build --config Release 2>&1 | tee ci_logs/cmake_build.log

      - name: Upload Plugin logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: plugin-build-logs
          path: |
            ci_logs/**
            plugin/build/**/CMakeCache.txt
            plugin/build/**/CMakeFiles/CMakeOutput.log
            plugin/build/**/CMakeFiles/CMakeError.log
          if-no-files-found: warn
          retention-days: 7

      # If you're using COPY_PLUGIN_AFTER_BUILD TRUE, upload installed bundles:
      - name: Upload installed plugin bundles (best-effort)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: MoreMojoPlugin-bundles
          path: |
            ~/Library/Audio/Plug-Ins/Components/MoreMojoPlugin.component
            ~/Library/Audio/Plug-Ins/VST3/MoreMojoPlugin.vst3
          if-no-files-found: warn
          retention-days: 7

      - name: Show last lines of plugin logs (on failure)
        if: failure()
        run: |
          echo "----- Tail of CMake configure -----"
          tail -n 200 ci_logs/cmake_configure.log || true
          echo "----- Tail of CMake build -----"
          tail -n 200 ci_logs/cmake_build.log || true

      # Package source for review
      - name: Package source tree (without .git)
        if: always()
        run: |
          set -euo pipefail
          mkdir -p source_bundle
          rsync -a \
            --exclude='.git' \
            --exclude='**/build' \
            --exclude='**/.DS_Store' \
            --exclude='**/*.xcworkspace' \
            --exclude='**/DerivedData' \
            ./ ./source_bundle/

          # Create a single archive for convenience
          tar -czf source_bundle.tar.gz -C source_bundle .

      - name: Upload source bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: source-bundle
          path: source_bundle.tar.gz
          if-no-files-found: error
          retention-days: 7

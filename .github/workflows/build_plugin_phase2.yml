name: Build Plugin Phase 2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-plugin:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Pull JUCE (or use submodule)
      run: |
        git clone --depth=1 https://github.com/juce-framework/JUCE.git || true
        echo "JUCE_DIR=$PWD/JUCE" >> $GITHUB_ENV
      
    - name: Build Plugin (script)
      run: |
        chmod +x scripts/build_plugin.sh
        # Pass PHASE=2 to the build script
        PHASE=2 ./scripts/build_plugin.sh
    
    - name: Package Plugins
      run: |
        mkdir -p dist
        # Use the deploy directory created by build_plugin.sh
        if [ -d "plugin/build/deploy/AU" ]; then
          cp -R plugin/build/deploy/AU/*.component dist/ || true
        fi
        if [ -d "plugin/build/deploy/VST3" ]; then
          cp -R plugin/build/deploy/VST3/*.vst3 dist/ || true
        fi
        if [ -d "plugin/build/deploy/Standalone" ]; then
          cp -R plugin/build/deploy/Standalone/*.app dist/ || true
        fi
        
        # Fallback to Release directory if deploy doesn't exist
        if [ ! -d "plugin/build/deploy" ]; then
          cp -R plugin/build/Release/*.component dist/ || true
          cp -R plugin/build/Release/*.vst3 dist/ || true
        fi
        
        # Archive component and vst3 separately for easier extraction
        cd dist
        find . -type d -name "*.component" | while read -r comp; do
          zip -r MoreMojo_AU.zip "$comp"
        done
        
        find . -type d -name "*.vst3" | while read -r vst; do
          zip -r MoreMojo_VST3.zip "$vst"
        done
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MoreMojo-Plugins
        path: dist
        if-no-files-found: error
        retention-days: 7
        
    # Slack notification for build status
    - name: Send Slack notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,workflow
        text: "Plugin build ${{ github.workflow }} completed with status: ${{ job.status }}\nSee details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

name: "MoreMojo Build"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual build'
        required: false
        default: 'Manual testing'

jobs:
  app:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Build App (xcodebuild) with logs
        run: |
          chmod +x scripts/build_app_xcode.sh
          scripts/build_app_xcode.sh

      - name: Upload App logs & xcresult (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-build-logs
          path: |
            ci_logs/**
            app/build/Build/Logs/**
            app/build/App.xcresult/**
          if-no-files-found: warn
          retention-days: 7

      - name: Upload App bundle (if built)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: MoreMojoStudio.app
          path: app/build/Build/Products/Release/MoreMojoStudio.app
          if-no-files-found: error
          retention-days: 7

      - name: Tail app log (on failure)
        if: failure()
        run: |
          echo "----- Tail of app build log -----"
          tail -n 200 ci_logs/xcodebuild_app_stdout.log || true

  plugin:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: Fetch JUCE
        run: |
          git clone --depth=1 https://github.com/juce-framework/JUCE.git || true
          echo "JUCE_DIR=$PWD/JUCE" >> $GITHUB_ENV

      - name: Clean CMake cache
        run: rm -rf plugin/build

      - name: Guard CMake for forbidden commands
        run: |
          if git grep -n "TARGET_BUNDLE_DIR" -- plugin/CMakeLists.txt | grep -v '^$'; then
            echo "❌ Remove custom TARGET_BUNDLE_DIR blocks (use COPY_PLUGIN_AFTER_BUILD ONLY)."
            exit 1
          fi

      - name: Configure (CMake) with logs
        run: |
          set -euo pipefail
          mkdir -p ci_logs
          cmake -B plugin/build -S plugin -DJUCE_DIR="${{ env.JUCE_DIR }}" 2>&1 | tee ci_logs/cmake_configure.log

      - name: Build (Release) with logs
        run: |
          set -euo pipefail
          cmake --build plugin/build --config Release 2>&1 | tee ci_logs/cmake_build.log

      - name: Upload Plugin logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: plugin-build-logs
          path: |
            ci_logs/**
            plugin/build/**/CMakeCache.txt
            plugin/build/**/CMakeFiles/CMakeOutput.log
            plugin/build/**/CMakeFiles/CMakeError.log
          if-no-files-found: warn
          retention-days: 7

      - name: Upload installed plugin bundles (best-effort)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: MoreMojoPlugin-bundles
          path: |
            ~/Library/Audio/Plug-Ins/Components/MoreMojoPlugin.component
            ~/Library/Audio/Plug-Ins/VST3/MoreMojoPlugin.vst3
          if-no-files-found: warn
          retention-days: 7

      - name: Tail plugin logs (on failure)
        if: failure()
        run: |
          echo "----- Tail of CMake configure -----"
          tail -n 200 ci_logs/cmake_configure.log || true
          echo "----- Tail of CMake build -----"
          tail -n 200 ci_logs/cmake_build.log || true
